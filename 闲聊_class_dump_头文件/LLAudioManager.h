//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAudioPlayerDelegate-Protocol.h"
#import "AVAudioRecorderDelegate-Protocol.h"

@class AVAudioPlayer, AVAudioRecorder, AVAudioSession, NSDate, NSDictionary, NSString, NSTimer;
@protocol LLAudioPlayDelegate, LLAudioRecordDelegate;

@interface LLAudioManager : NSObject <AVAudioRecorderDelegate, AVAudioPlayerDelegate>
{
    double startTime;
    double maxRecordTime;
    NSTimer *timer;
    NSDate *startDate;
    double endDuration;
    _Bool _isRecording;
    _Bool _isPlaying;
    _Bool _isPhoneVoice;
    _Bool _isCancelRecording;
    _Bool _isFinishRecording;
    _Bool _isPlaySessionActive;
    id <LLAudioRecordDelegate> _recordDelegate;
    id <LLAudioPlayDelegate> _playerDelegate;
    id _userinfo;
    AVAudioSession *_audioSession;
    NSString *_category;
    AVAudioRecorder *_recorder;
    AVAudioPlayer *_audioPlayer;
    NSDictionary *_recordSetting;
    NSString *_filePath;
    CDUnknownBlockType _block;
    NSString *_previousCategory;
}

+ (long long)currentVolumeLevel;
+ (float)currentVolumn;
+ (id)dataPath;
+ (id)createFolderWithName:(id)arg1 inDirectory:(id)arg2;
+ (id)wavPathWithName:(id)arg1;
+ (id)amrPathWithName:(id)arg1;
+ (id)randomFileName;
+ (id)sharedManager;
@property(nonatomic) _Bool isPlaySessionActive; // @synthesize isPlaySessionActive=_isPlaySessionActive;
@property(nonatomic) _Bool isFinishRecording; // @synthesize isFinishRecording=_isFinishRecording;
@property(nonatomic) _Bool isCancelRecording; // @synthesize isCancelRecording=_isCancelRecording;
@property(copy, nonatomic) NSString *previousCategory; // @synthesize previousCategory=_previousCategory;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(retain, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) NSDictionary *recordSetting; // @synthesize recordSetting=_recordSetting;
@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) AVAudioRecorder *recorder; // @synthesize recorder=_recorder;
@property(retain, nonatomic) NSString *category; // @synthesize category=_category;
@property(retain, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(retain, nonatomic) id userinfo; // @synthesize userinfo=_userinfo;
@property(nonatomic) __weak id <LLAudioPlayDelegate> playerDelegate; // @synthesize playerDelegate=_playerDelegate;
@property(nonatomic) __weak id <LLAudioRecordDelegate> recordDelegate; // @synthesize recordDelegate=_recordDelegate;
@property(nonatomic) _Bool isPhoneVoice; // @synthesize isPhoneVoice=_isPhoneVoice;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
- (void).cxx_destruct;
- (_Bool)convertWAV:(id)arg1 toAMR:(id)arg2;
- (_Bool)convertAMR:(id)arg1 toWAV:(id)arg2;
- (void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)_stopCurrentPlaying;
- (void)continuePlay;
- (void)pause;
- (void)stopCurrentPlaying;
- (void)_stopPlaying;
- (void)stopPlaying;
- (void)startPlayingWithPath:(id)arg1 delegate:(id)arg2 userinfo:(id)arg3 continuePlaying:(_Bool)arg4;
- (void)startPlayingWithPath:(id)arg1 category:(id)arg2 delegate:(id)arg3 userinfo:(id)arg4 continuePlaying:(_Bool)arg5;
- (void)conversationSensorStateChange:(id)arg1;
- (void)checkAvailabilityWithFile:(id)arg1 withCategory:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setAudioPlayCategory:(id)arg1;
- (void)audioRecorderEncodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioRecorderDidFinishRecording:(id)arg1 successfully:(_Bool)arg2;
- (void)didStopRecord;
- (void)willStopRecord;
- (void)cancelRecording;
- (void)stopRecording;
- (void)timerHandler:(id)arg1;
- (void)updateVoiceMeter;
- (void)promptRecordPermissionDeniedAlert;
- (void)startRecordingWithDelegate:(id)arg1;
- (void)checkAvailabilityWithDelegate:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)requestRecordPermission:(CDUnknownBlockType)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

